// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = "prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiZWQ3MWY0YzktZThkZi00ZDlkLThkNDYtMTY3ZmE4OWY3YzlhIiwidGVuYW50X2lkIjoiZWI0MmI4ODRjYWQ1YmUxOGIwYjIyMjljNTZiMzU4MzNhYjY5YTM0Mjg2NmNlODc3ZGE4N2Q2ZWYyYmQ5MzljNyIsImludGVybmFsX3NlY3JldCI6IjdhNmI5ZmM1LTA2MGYtNDU4NC1iM2MzLTA2Y2JlYjBkOWZmNSJ9.QHowG7T-DfUqKSvXdgtzh4zFHa7FTCTC-wDvKcRzEPA"
  directUrl = "postgres://uploadpg_user:ZDXHhaGLFuoTqoZjoqXaP7iWxCv3rjYj@dpg-cpprf608fa8c739ksrag-a.oregon-postgres.render.com/uploadpg"
}

model User {
  id           String        @id
  email        String        @unique
  password     String
  name         String
  addressId    String?       @map("address_id")
  address      Address?      @relation(fields: [addressId], references: [id])
  companies    Company[]
  fisicPersons FisicPerson[]

  created_at   DateTime
  deleted_at   DateTime?
  activated_at DateTime?
  Process      Process[]
  Order        Order[]
  Service      Service[]

  @@map("users")
}

model Company {
  id        String    @id
  document  String    @unique
  userId    String    @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  addressId String?   @map("address_id")
  address   Address?  @relation(fields: [addressId], references: [id])
  Process   Process[]
  Order     Order[]

  @@map("companies")
}

model FisicPerson {
  document String @unique
  userId   String @map("user_id")
  user     User   @relation(fields: [userId], references: [id])

  @@id([document, userId])
  @@map("fisic_persons")
}

model Address {
  id         String    @id
  street     String
  city       String
  state      String
  postalCode String    @map("postal_code")
  country    String
  users      User[]
  companies  Company[]

  @@map("addresses")
}

model Process {
  id            String      @id
  imageQuantity Int         @map("image_quantity")
  assetsUrl     String?     @map("assets_url")
  status        String      @default("IDLE")
  result        String?
  userId        String?     @map("user_id")
  user          User?       @relation(fields: [userId], references: [id])
  companyId     String?     @map("company_id")
  company       Company?    @relation(fields: [companyId], references: [id])
  services      Service[]
  orderItems    OrderItem[]

  @@map("processes")
}

model Order {
  id         String      @id
  createdAt  DateTime    @map("created_at")
  userId     String?     @map("user_id")
  user       User?       @relation(fields: [userId], references: [id])
  companyId  String?     @map("company_id")
  company    Company?    @relation(fields: [companyId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  totalPrice Float     @map("total_price")
  orderId    String    @map("order_id")
  order      Order     @relation(fields: [orderId], references: [id])
  serviceId  String    @map("service_id")
  service    Process   @relation(fields: [serviceId], references: [id])
  services   Service[]

  @@map("order_items")
}

model Service {
  id          String     @id
  createdAt   DateTime   @map("created_at")
  userId      String?    @map("user_id")
  user        User?      @relation(fields: [userId], references: [id])
  processId   String?    @map("process_id")
  process     Process?   @relation(fields: [processId], references: [id])
  orderItemId Int?       @map("order_item_id")
  orderItem   OrderItem? @relation(fields: [orderItemId], references: [id])

  @@map("services")
}
